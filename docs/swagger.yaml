basePath: /admin
definitions:
  common.PageResult:
    properties:
      list: {}
      pageNum:
        type: string
      pageSize:
        type: string
      total:
        type: integer
      totalPage:
        type: string
    type: object
  common.Result:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  pms.AttrInfoDto:
    properties:
      attributeCategoryId:
        type: integer
      attributeId:
        type: integer
    type: object
  pms.Brand:
    properties:
      bigPic:
        type: string
      brandStory:
        type: string
      createdAt:
        type: string
      factoryStatus:
        type: integer
      firstLetter:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      productCommentCount:
        type: integer
      productCount:
        type: integer
      showStatus:
        type: integer
      sort:
        type: integer
      updatedAt:
        type: string
    type: object
  pms.CategoryDto:
    properties:
      children:
        items:
          $ref: '#/definitions/pms.ProductCategory'
        type: array
      createdAt:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      keywords:
        type: string
      level:
        type: integer
      name:
        type: string
      navStatus:
        type: integer
      parent:
        $ref: '#/definitions/pms.ProductCategory'
      parentId:
        type: integer
      productAttributeIdList:
        items:
          type: integer
        type: array
      productAttributes:
        items:
          $ref: '#/definitions/pms.ProductAttribute'
        type: array
      productCount:
        type: integer
      productUnit:
        type: string
      showStatus:
        type: integer
      sort:
        type: integer
      updatedAt:
        type: string
    type: object
  pms.FeightTemplate:
    properties:
      charge_type:
        type: integer
      continue_fee:
        type: number
      continue_weight:
        type: number
      createdAt:
        type: string
      dest:
        type: string
      first_fee:
        type: number
      first_weight:
        type: number
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  pms.MemberPrice:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      member_level_id:
        type: integer
      member_level_name:
        type: string
      member_price:
        type: number
      product_id:
        type: integer
      updatedAt:
        type: string
    type: object
  pms.Product:
    properties:
      albumPics:
        type: string
      brand:
        $ref: '#/definitions/pms.Brand'
      brandId:
        type: integer
      brandName:
        type: string
      cateParentId:
        type: integer
      createdAt:
        type: string
      deleteStatus:
        type: integer
      description:
        type: string
      detailDesc:
        type: string
      detailHtml:
        type: string
      detailMobileHtml:
        type: string
      detailTitle:
        type: string
      feightTemplate:
        $ref: '#/definitions/pms.FeightTemplate'
      feightTemplateId:
        type: integer
      giftGrowth:
        type: integer
      giftPoint:
        type: integer
      id:
        type: integer
      keywords:
        type: string
      lowStock:
        type: integer
      memberPriceList:
        items:
          $ref: '#/definitions/pms.MemberPrice'
        type: array
      name:
        type: string
      newStatus:
        type: integer
      note:
        type: string
      originalPrice:
        type: number
      pic:
        type: string
      previewStatus:
        type: integer
      price:
        type: number
      productAttributeCategory:
        $ref: '#/definitions/pms.ProductAttributeCategory'
      productAttributeCategoryId:
        type: integer
      productAttributeValueList:
        items:
          $ref: '#/definitions/pms.ProductAttributeValue'
        type: array
      productCategory:
        $ref: '#/definitions/pms.ProductCategory'
      productCategoryId:
        type: integer
      productCategoryName:
        type: string
      productFullReductionList:
        items:
          $ref: '#/definitions/pms.ProductFullReduction'
        type: array
      productLadderList:
        items:
          $ref: '#/definitions/pms.ProductLadder'
        type: array
      productSn:
        type: string
      promotionEndTime:
        type: string
      promotionPerLimit:
        type: integer
      promotionPrice:
        type: string
      promotionStartTime:
        type: string
      promotionType:
        type: integer
      publishStatus:
        type: integer
      recommandStatus:
        type: integer
      sale:
        type: integer
      serviceIds:
        type: string
      skuStockList:
        items:
          $ref: '#/definitions/pms.SkuStock'
        type: array
      sort:
        type: integer
      stock:
        type: integer
      subTitle:
        type: string
      unit:
        type: string
      updatedAt:
        type: string
      usePointLimit:
        type: integer
      verifyStatus:
        type: integer
      weight:
        type: number
    type: object
  pms.ProductAttribute:
    properties:
      attributeValues:
        items:
          $ref: '#/definitions/pms.ProductAttributeValue'
        type: array
      createdAt:
        type: string
      filterType:
        type: integer
      handAddStatus:
        type: integer
      id:
        type: integer
      inputList:
        type: string
      inputType:
        type: integer
      name:
        type: string
      productAttributeCategory:
        $ref: '#/definitions/pms.ProductAttributeCategory'
      productAttributeCategoryId:
        type: integer
      productCategories:
        items:
          $ref: '#/definitions/pms.ProductCategory'
        type: array
      relatedStatus:
        type: integer
      searchType:
        type: integer
      selectType:
        type: integer
      sort:
        type: integer
      type:
        type: integer
      updatedAt:
        type: string
    type: object
  pms.ProductAttributeCategory:
    properties:
      attributeCount:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      paramCount:
        type: integer
      productAttributeList:
        items:
          $ref: '#/definitions/pms.ProductAttribute'
        type: array
      updatedAt:
        type: string
    type: object
  pms.ProductAttributeValue:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      productAttribute:
        $ref: '#/definitions/pms.ProductAttribute'
      productAttributeId:
        type: integer
      productId:
        type: integer
      updatedAt:
        type: string
      value:
        type: string
    type: object
  pms.ProductCategory:
    properties:
      children:
        items:
          $ref: '#/definitions/pms.ProductCategory'
        type: array
      createdAt:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      keywords:
        type: string
      level:
        type: integer
      name:
        type: string
      navStatus:
        type: integer
      parent:
        $ref: '#/definitions/pms.ProductCategory'
      parentId:
        type: integer
      productAttributes:
        items:
          $ref: '#/definitions/pms.ProductAttribute'
        type: array
      productCount:
        type: integer
      productUnit:
        type: string
      showStatus:
        type: integer
      sort:
        type: integer
      updatedAt:
        type: string
    type: object
  pms.ProductFullReduction:
    properties:
      createdAt:
        type: string
      fullPrice:
        type: number
      id:
        type: integer
      product:
        $ref: '#/definitions/pms.Product'
      productId:
        type: integer
      reducePrice:
        type: number
      updatedAt:
        type: string
    type: object
  pms.ProductLadder:
    properties:
      count:
        type: integer
      createdAt:
        type: string
      discount:
        type: number
      id:
        type: integer
      price:
        type: number
      product:
        $ref: '#/definitions/pms.Product'
      productId:
        type: integer
      updatedAt:
        type: string
    type: object
  pms.SkuStock:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      lock_stock:
        type: integer
      low_stock:
        type: integer
      pic:
        type: string
      price:
        type: number
      product_id:
        type: integer
      promotion_price:
        type: number
      sale:
        type: integer
      sku_code:
        type: string
      sp1:
        type: string
      sp2:
        type: string
      sp3:
        type: string
      stock:
        type: integer
      updatedAt:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:4000
info:
  contact:
    email: 5239604@qq.com
    name: AuroraOps04
    url: https://auroraops04.com
  description: based on gin gorm
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: mall api based on go
  version: v1.0
paths:
  /brand/{id}:
    get:
      parameters:
      - default: 1
        description: brand id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.Brand'
              type: object
      tags:
      - PmsBrandController
  /brand/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: add brand
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/pms.Brand'
      responses: {}
      tags:
      - PmsBrandController
  /brand/delete/{id}:
    get:
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      tags:
      - PmsBrandController
  /brand/delete/batch:
    post:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.Brand'
                  type: array
              type: object
      summary: delete brand batch by ids
      tags:
      - PmsBrandController
  /brand/list:
    get:
      parameters:
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: keyword
        enum:
        - "0"
        - "1"
        in: query
        name: showStatus
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.Brand'
                  type: array
              type: object
      tags:
      - PmsBrandController
  /brand/listAll:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.Brand'
                  type: array
              type: object
      summary: list all brand
      tags:
      - PmsBrandController
  /brand/update/{id}:
    post:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update brand
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/pms.Brand'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: Update Brand by id
      tags:
      - PmsBrandController
  /brand/update/factoryStatus:
    post:
      parameters:
      - description: factory status
        in: formData
        name: factoryStatus
        required: true
        type: string
      - description: id array join as ,
        in: formData
        name: ids
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update brand show status batch
      tags:
      - PmsBrandController
  /brand/update/showStatus:
    post:
      parameters:
      - description: show status
        enum:
        - "0"
        - "1"
        in: formData
        name: showStatus
        required: true
        type: string
      - description: id array join as ,
        in: formData
        name: ids
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      tags:
      - PmsBrandController
  /product/create:
    post:
      parameters:
      - description: add product
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pms.Product'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: Create prodcut api
      tags:
      - PmsProductController
  /product/list:
    get:
      parameters:
      - description: brand id
        in: query
        name: brandId
        type: integer
      - description: keyword
        in: query
        name: keyword
        type: string
      - default: 1
        description: page num
        in: query
        name: pageNum
        type: integer
      - default: 1
        description: page size
        in: query
        name: pageSize
        type: integer
      - description: product category id
        in: query
        name: productCategoryId
        type: integer
      - description: product sn
        in: query
        name: productSN
        type: string
      - description: publish status
        in: query
        name: publishStatus
        type: integer
      - description: verify status
        in: query
        name: verifyStatus
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.PageResult'
      summary: Page
      tags:
      - PmsProductController
  /product/simpleList:
    get:
      parameters:
      - description: name or sn
        in: query
        name: keyword
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.Product'
                  type: array
              type: object
      summary: GetProductSimpleListNotContainsRelationData
      tags:
      - PmsProductController
  /product/update/deleteStatus:
    post:
      parameters:
      - description: id list
        in: query
        name: ids
        required: true
        type: string
      - description: deleteStatus
        enum:
        - 0
        - 1
        in: query
        name: deleteStatus
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: updateProductDeleteStatus
      tags:
      - PmsProductController
  /product/update/newStatus:
    post:
      parameters:
      - description: id list
        in: query
        name: ids
        required: true
        type: string
      - description: newStatus
        enum:
        - "0"
        - "1"
        in: query
        name: newStatus
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: updateProductNewStatus
      tags:
      - PmsProductController
  /product/update/publishStatus:
    post:
      parameters:
      - description: id list
        in: query
        name: ids
        required: true
        type: string
      - description: publishStatus
        enum:
        - 0
        - 1
        in: query
        name: publishStatus
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: updateProductPublishStatus
      tags:
      - PmsProductController
  /product/update/recommendStatus:
    post:
      parameters:
      - description: id list
        in: query
        name: ids
        required: true
        type: string
      - description: recommendStatus
        enum:
        - 0
        - 1
        in: query
        name: recommendStatus
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: updateProductRecommendStatus
      tags:
      - PmsProductController
  /product/update/verifyStatus:
    post:
      parameters:
      - description: id list
        in: query
        name: ids
        required: true
        type: string
      - description: deleteStatus
        enum:
        - 0
        - 1
        in: query
        name: deleteStatus
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: updateProductVerifyStatus
      tags:
      - PmsProductController
  /product/updateInfo/{id}:
    get:
      parameters:
      - description: prodcut id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.Product'
              type: object
      summary: getProductInfoForUpdate
      tags:
      - PmsProductController
  /productAttribute/{id}:
    get:
      parameters:
      - description: attribute id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.ProductAttribute'
              type: object
      summary: get attribute by id
      tags:
      - PmsProductAttributeController
    post:
      parameters:
      - description: attribute id
        in: path
        name: id
        required: true
        type: integer
      - description: 'update attribute '
        in: body
        name: attr
        required: true
        schema:
          $ref: '#/definitions/pms.ProductAttribute'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update attribute by id
      tags:
      - PmsProductAttributeController
  /productAttribute/attrInfo/{productCategoryId}:
    get:
      parameters:
      - description: product category id
        in: path
        name: productCategoryId
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.AttrInfoDto'
                  type: array
              type: object
      summary: GetInfoByProductCategoryId
      tags:
      - PmsProductAttributeController
  /productAttribute/category/{id}:
    get:
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.ProductAttributeCategory'
              type: object
      summary: get attribute category by id
      tags:
      - PmsProductAttributeCategoryController
  /productAttribute/category/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: category name
        in: formData
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: create attribute category
      tags:
      - PmsProductAttributeCategoryController
  /productAttribute/category/delete/{id}:
    get:
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: Delete by  id
      tags:
      - PmsProductAttributeCategoryController
  /productAttribute/category/list:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.ProductAttributeCategory'
                  type: array
              type: object
      summary: list by page
      tags:
      - PmsProductAttributeCategoryController
  /productAttribute/category/list/withAttr:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.ProductAttributeCategory'
              type: object
      summary: select all and preload attribute list
      tags:
      - PmsProductAttributeCategoryController
  /productAttribute/category/update/{id}:
    post:
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      - description: update category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/pms.ProductAttributeCategory'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update by  id
      tags:
      - PmsProductAttributeCategoryController
  /productAttribute/create:
    post:
      parameters:
      - description: add attribute
        in: body
        name: attribute
        required: true
        schema:
          $ref: '#/definitions/pms.ProductAttribute'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.ProductAttribute'
              type: object
      summary: create attribute
      tags:
      - PmsProductAttributeController
  /productAttribute/delete:
    post:
      responses: {}
      summary: Delete Batch productAttribute
      tags:
      - PmsProductAttributeController
      - uncompleted
  /productAttribute/list/{cId}:
    get:
      parameters:
      - description: product attribute category id
        in: path
        name: cId
        required: true
        type: integer
      - description: type
        in: query
        name: type
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.ProductAttribute'
                  type: array
              type: object
      summary: list by page
      tags:
      - PmsProductAttributeController
  /productCategory/{id}:
    get:
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.ProductCategory'
              type: object
      summary: get product category by id
      tags:
      - PmsProductCategoryController
  /productCategory/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: add product category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/pms.CategoryDto'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  $ref: '#/definitions/pms.ProductCategory'
              type: object
      summary: create product category
      tags:
      - PmsProductCategoryController
  /productCategory/delete/{id}:
    post:
      parameters:
      - description: wanted remove category id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: remove category by id
      tags:
      - PmsProductCategoryController
  /productCategory/list/{parentId}:
    get:
      parameters:
      - description: parent id
        in: path
        name: parentId
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.ProductCategory'
                  type: array
              type: object
      summary: product category page view
      tags:
      - PmsProductCategoryController
  /productCategory/list/withChildren:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.ProductCategory'
                  type: array
              type: object
      summary: list all category that parentId equals zero and preload children
      tags:
      - PmsProductCategoryController
  /productCategory/update/{id}:
    post:
      parameters:
      - description: wanted update category's id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update category by id
      tags:
      - PmsProductCategoryController
  /productCategory/update/navStatus:
    post:
      parameters:
      - description: nav status
        enum:
        - 0
        - 1
        in: formData
        name: navStatus
        required: true
        type: integer
      - collectionFormat: csv
        description: id list
        in: formData
        items:
          type: integer
        name: ids
        required: true
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update category's nav status when id in ids
      tags:
      - PmsProductCategoryController
  /productCategory/update/showStatus:
    post:
      parameters:
      - description: nav status
        enum:
        - 0
        - 1
        in: formData
        name: showStatus
        required: true
        type: integer
      - collectionFormat: csv
        description: id list
        in: formData
        items:
          type: integer
        name: ids
        required: true
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update category's show status when id in ids
      tags:
      - PmsProductCategoryController
  /sku/{pid}:
    get:
      parameters:
      - description: product id
        in: path
        name: pid
        required: true
        type: integer
      - description: sku code
        in: query
        name: keyword
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/pms.SkuStock'
                  type: array
              type: object
      summary: get sku stock by prodcut id
      tags:
      - PmsSkuStockController
  /sku/update/{pid}:
    post:
      parameters:
      - description: prodcut id
        in: path
        name: pid
        required: true
        type: integer
      - description: skuList
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/pms.SkuStock'
          type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: update product's skuList by product id
      tags:
      - PmsSkuStockController
  /update/{id}:
    post:
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: integer
      - description: want to update product
        in: body
        name: prodcut
        required: true
        schema:
          $ref: '#/definitions/pms.Product'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Result'
            - properties:
                data:
                  type: integer
              type: object
      summary: PmsUpdateProductById
      tags:
      - PmsProductController
swagger: "2.0"
